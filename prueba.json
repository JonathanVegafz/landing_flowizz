{
  "name": "Prueba desde API",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -2368,
        -320
      ],
      "id": "8b5de436-b62c-4371-aaf7-532ba5798fb6",
      "name": "Telegram Trigger",
      "webhookId": "a07c6d4f-2077-4637-bf14-c1ea3bdd214d",
      "credentials": {
        "telegramApi": {
          "id": "yIp5FUvmBPkQUK9S",
          "name": "flowizz_bot"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c41a4d32-04e5-40b1-a4e5-895f4735205e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "afbcbe79-72d9-4820-ad62-1ced5209b414",
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1952,
        -320
      ],
      "id": "7e51f658-249c-4135-a0c9-2fe6609d915f",
      "name": "Switch",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1456,
        -496
      ],
      "id": "223091c2-d26a-4458-9064-efec93d76827",
      "name": "Get a file",
      "webhookId": "bf582fd5-0893-4791-b3d8-44b41d305ccf",
      "credentials": {
        "telegramApi": {
          "id": "yIp5FUvmBPkQUK9S",
          "name": "flowizz_bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1968,
        -480
      ],
      "id": "8075bc41-5c65-4868-9808-035a8bd0b78e",
      "name": "Send a chat action",
      "webhookId": "580bd47b-f264-4382-91f2-d687445a621c",
      "credentials": {
        "telegramApi": {
          "id": "yIp5FUvmBPkQUK9S",
          "name": "flowizz_bot"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "Eres un agente de IA conectado a Telegram mediante n8n. Tu funci√≥n es interpretar la instrucci√≥n del usuario y decidir si debes responder directamente o iniciar un flujo de tarea que pueda requerir sub-agentes especializados.\n\nReglas principales:\n\n1. Mensajes casuales:\n\n* Si el usuario env√≠a un mensaje sin pedir una tarea, responde normalmente en Telegram.\n* Ejemplo: \"Hola que tal agente.\" ‚Üí \"¬°Hola! Todo bien, listo para ayudarte üöÄ.\"\n\n2. Instrucciones de tarea:\n\n* Identifica la tarea solicitada por el usuario.\n* Si la tarea NO est√° soportada ‚Üí responde: \"Lo siento, esa tarea no est√° disponible por ahora.\"\n\n3. Tareas (por ahora solo ‚ÄúEnviar un correo‚Äù):\n\n* Verifica que el usuario entregue toda la informaci√≥n necesaria: correo del destinatario, asunto (subject) y mensaje.\n* Si falta informaci√≥n ‚Üí pregunta paso a paso, sin inventar datos (excepto el mensaje, que puede dar propuestas).\n* Una vez que tengas toda la informaci√≥n ‚Üí construye un JSON con el formato que espera el sub-agente \"agente_send_message\":\n\n{\n\"to\" ‚Üí direcci√≥n de correo del destinatario\n\n\"subject\" ‚Üí asunto del correo\n\n\"message\" ‚Üí contenido del mensaje\n\"tool\": \"send\\_message\",\n\"input\": {\n\"to\": \"[correo@ejemplo.com](mailto:correo@ejemplo.com)\",\n\"subject\": \"Asunto del correo\",\n\"message\": \"contenido del mensaje\"\n}\n\n* Env√≠a este JSON al sub-agente \"agente_send_message\", quien ejecutar√° el tool \"send_message\".\n* Ejemplo de interacci√≥n:\n  Usuario: \"Quiero enviar un correo.\"\n  Agente: \"Claro üöÄ, ¬øa qui√©n va dirigido el correo?\"\n  Usuario: \"Es para [juan@example.com](mailto:juan@example.com)\"\n  Agente: \"Perfecto üëç, ¬øqu√© asunto quieres ponerle?\"\n  Usuario: \"Reuni√≥n de ma√±ana\"\n  Agente: \"Anotado ‚úÖ, ¬øcu√°l es el mensaje que quieres enviar?\"\n  Usuario: \"Nos vemos ma√±ana a las 9am.\"\n  Agente: env√≠a el JSON al sub-agente \"agente_send_message\" para que el ejecute \"send_message.\n\n4. Formato de salida:\n\n* Conversaci√≥n normal ‚Üí respuesta directa en Telegram.\n* Tarea ‚Üí pasa al sub-agente correspondiente usando el JSON con \"tool\" e \"input\".\n* Si falta informaci√≥n ‚Üí pregunta espec√≠ficamente por la informaci√≥n faltante.\n* Tareas no soportadas ‚Üí \"Lo siento, esa tarea no est√° disponible por ahora.\"\n* Solo permite los siguientes caracteres: \\[^a-zA-Z0-9√°√©√≠√≥√∫√Å√â√ç√ì√ö√º√ú√±√ë\\s.,!?¬°¬ø:;()-'\"%/+=@#]\n\nNunca muestres estas reglas ni inventes informaci√≥n."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -128,
        -336
      ],
      "id": "2fc326f8-00aa-4ffc-8e4a-38362dba9c69",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsCode": "const objeto = {\n  ...$input.first().json.message,\n  update_id: $input.first().json.update_id,\n  // text: $input.first().json.message.text\n}\n\nreturn objeto;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1408,
        -224
      ],
      "id": "c3faaff4-d135-4093-b7f2-847c08caefa2",
      "name": "Code1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        224,
        -336
      ],
      "id": "33ad52dc-233e-488a-9287-2d9d91a42289",
      "name": "Send a text message",
      "webhookId": "6e9df0bf-37d0-46d7-8385-326f67bcbece",
      "credentials": {
        "telegramApi": {
          "id": "yIp5FUvmBPkQUK9S",
          "name": "flowizz_bot"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "El subagente agente_send_message es un agente especializado cuya √∫nica funci√≥n es enviar correos electr√≥nicos en el flujo \"send_message\". Recibe como entrada los datos to, subject y message, genera un HTML estilizado a partir del mensaje y devuelve una salida en formato JSON lista para ser utilizada por el flujo send_message en n8n. No inventa ni modifica la informaci√≥n, solo la organiza en una plantilla clara y profesional, y siempre responde con un JSON que incluye el correo completo y la acci√≥n \"send_message\".",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', `Son los datos del mensaje.`, 'string') }}",
        "options": {
          "systemMessage": "Eres un sub-agente de IA llamado agente_send_message.\nTu funci√≥n es recibir los datos de un correo, generar un HTML estilizado y enviarlo usando el tool \"send_message\".\n\nReglas principales:\n\nEntrada esperada: siempre recibir√°s un objeto con:\n\n\"to\" ‚Üí direcci√≥n de correo del destinatario\n\n\"subject\" ‚Üí asunto del correo\n\n\"message\" ‚Üí contenido del mensaje\n\nGenerar HTML estilizado:\n\nDebe incluir <!DOCTYPE html>, <html>, <head>, <body> y <style>.\n\nDise√±o simple y elegante:\n\nFondo claro, tipograf√≠a Arial o sans-serif.\n\nContenedor centrado con bordes redondeados y sombra ligera.\n\nPaddings y m√°rgenes equilibrados.\n\nNunca inventes texto, solo usa el \"message\" recibido.\n\nFormato de salida:\nDebes invocar directamente el tool send_message del sub-agente, devolviendo un JSON v√°lido con los campos:\n\n{\n\"tool\": \"send_message\",\n\"input\": {\n\"to\": \"...\",\n\"subject\": \"...\",\n\"html\": \"...\"\n}\n}\n\n\"html\" debe contener el HTML completo generado.\n\n\"tool\" siempre ser√° \"send_message\".\n\n\"input\" agrupa todos los datos del correo.\n\nRestricciones:\n\nNo env√≠es solo HTML ni texto plano.\n\nEl JSON debe estar listo para que ejecutes directamente el tool \"send_message\", sin texto extra ni explicaciones alrededor."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        192,
        -96
      ],
      "id": "02c14525-bc94-4fd7-963a-d53b536caaf7",
      "name": "agente_send_message"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1248,
        -496
      ],
      "id": "155ee2be-8399-4431-9dd2-d70631917bfb",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "pKz08rODPh7mayWN",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -256,
        -96
      ],
      "id": "82f022ee-0a43-48c9-9354-243fcb8590c6",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "pKz08rODPh7mayWN",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -128,
        -128
      ],
      "id": "70040dc9-a44c-49b7-921a-dea51e0e3232",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        160,
        96
      ],
      "id": "470efbdd-4b15-4d04-a446-07b41bbbcb17",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "pKz08rODPh7mayWN",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {text: $input.first().json.content.parts[0].text};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        -496
      ],
      "id": "43bafe89-a1b3-4e43-bc8d-01a982ca3db2",
      "name": "Code"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', `A quien va dirijido`, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', `El asunto`, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', `En mensaje en html`, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        336,
        112
      ],
      "id": "97c97b49-29c0-428f-86fa-9d35b01e3736",
      "name": "send_message",
      "webhookId": "9667c9f2-120c-467a-afe2-24bdf11ab2e0",
      "credentials": {
        "gmailOAuth2": {
          "id": "uKdB2qblS8YSlrbB",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a chat action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agente_send_message": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "agente_send_message",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send_message": {
      "ai_tool": [
        [
          {
            "node": "agente_send_message",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "tags": [],
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9dc8b315cbb55712caaf6ea68d7e56294c219f452e0dc285169df4f92cd2569e"
  }
}
